<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 license agreements; and to You under the Apache License, version 2.0:

   https://www.apache.org/licenses/LICENSE-2.0

 This file is part of the Apache Pekko project, which was derived from Akka.
-->
<!--
  To test locally, first 'sbt maven-plugin:publishM2' in the parent dir
  and define the published version as pekko.grpc.project.version in the properties block below
  or pass it to mvn when running like so: mvn -Dpekko.grpc.project.version=some-version compile exec:exec
-->
<project>
  <modelVersion>4.0.0</modelVersion>
  <name>Pekko gRPC Scala example project</name>
  <groupId>org.apache.pekko</groupId>
  <artifactId>grpc-plugin-tester-scala</artifactId>
  <version>0.1-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <pekko.version>1.1.2</pekko.version>
    <pekko.http.version>1.1.0</pekko.http.version>
    <grpc.version>1.67.1</grpc.version> <!-- checked synced by VersionSyncCheckPlugin -->
    <project.encoding>UTF-8</project.encoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.pekko</groupId>
      <artifactId>pekko-grpc-runtime_2.12</artifactId>
      <version>${pekko.grpc.project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.pekko</groupId>
      <artifactId>pekko-http-cors_2.12</artifactId>
      <version>${pekko.http.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.pekko</groupId>
      <artifactId>pekko-stream-testkit_2.12</artifactId>
      <version>${pekko.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.12</artifactId>
      <version>3.2.19</version>
      <scope>test</scope>
    </dependency>

    <!-- Needed for the generated client -->
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${grpc.version}</version>
    </dependency>
  </dependencies>
  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.3.2</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.pekko</groupId>
        <artifactId>pekko-grpc-maven-plugin</artifactId>
        <version>${pekko.grpc.project.version}</version>
        <configuration>
          <language>Scala</language>
          <generatorSettings>
            <serverPowerApis>true</serverPowerApis>
          </generatorSettings>
          <includeStdTypes>true</includeStdTypes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- disable surefire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <!-- enable scalatest -->
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>TestSuite.txt</filereports>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.5.1</version>
        <executions>
          <execution>
            <id>getClasspathFilenames</id>
            <goals>
              <!-- provides the jars of the classpath as properties inside of maven
                   so that we can refer to one of the jars in the exec plugin config below -->
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-classpath</argument>
            <classpath />
            <argument>example.myapp.helloworld.GreeterServer</argument>
          </arguments>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
